                      | # DMarshall - A01073629
                      | # AWallentine - A01107224
                      | 
  0x000:              | init:
  0x000: 308400020000 |     irmovl Stack, %esp
  0x006: 308500020000 |     irmovl Stack, %ebp
  0x00c: 8014000000   |     call main
  0x011: 10           |     halt
  0x014:              |     .align 4
                      | 
  0x014:              | main:
  0x014: a058         |     pushl %ebp
  0x016: 2045         |     rrmovl %esp,%ebp
  0x018: 308058000000 |     irmovl ele1, %eax
  0x01e: a008         |     pushl %eax
  0x020: 8026000000   |     call sum_list
  0x025: 90           |     ret
                      | 
  0x026:              | sum_list:
  0x026: a058         |     pushl %ebp
  0x028: 2045         |     rrmovl %esp, %ebp
  0x02a: 503508000000 |     mrmovl 8(%ebp), %ebx
  0x030: 308000000000 |     irmovl $0, %eax
  0x036: 308100000000 |     irmovl $0, %ecx
  0x03c:              | sum_list_int:
  0x03c: 502300000000 |     mrmovl (%ebx), %edx
  0x042: 6020         |     addl %edx, %eax
  0x044: 503304000000 |     mrmovl 4(%ebx), %ebx
  0x04a: a038         |     pushl %ebx
  0x04c: 6113         |     subl %ecx, %ebx
  0x04e: b038         |     popl %ebx
  0x050: 743c000000   |     jne sum_list_int
  0x055: 90           |     ret
                      | 
                      | # Sample linked list
  0x058:              | .align 4
  0x058:              | ele1:
  0x058: 0a000000     |     .long 0x00a
  0x05c: 60000000     |     .long ele2
  0x060:              | ele2:
  0x060: b0000000     |     .long 0x0b0
  0x064: 68000000     |     .long ele3
  0x068:              | ele3:
  0x068: 000c0000     |     .long 0xc00
  0x06c: 00000000     |     .long 0
                      | 
                      | # Allocate space for stack
  0x200:              | .pos 0x200
  0x200:              | Stack:
                      | 
